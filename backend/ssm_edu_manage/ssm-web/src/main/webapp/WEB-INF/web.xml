<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!-- 配置 Servlet -->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 指定配置文件，不使用默认位置和名称 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <!-- 将当前 Servlet 的初始化时间提前到服务器启动时（默认是有第一个请求时）-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- Servlet 映射 -->
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <!--
            /  浏览器向服务器发送的所有请求（不包括 .jsp）
            /* 所有请求（包括 .jsp）
        -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!-- 设置请求的编码 -->
        <init-param>
            <param-name>encoding</param-name>
            <!-- 设置编码格式 -->
            <param-value>utf-8</param-value>
        </init-param>
        <!-- 同时也设置响应的编码 -->
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <!-- 对所有资源都进行过滤 -->
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--
        配置 Spring 的监听器，在服务器启动时加载 Spring 的配置文件
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--
        全局参数，自定义 Spring 配置文件的位置和名称，以便使用 Spring IOC 容器中的 bean
        Spring 配置文件的默认位置和名称：/WEB-INF/applicationContext.xml
        也可通过上下文参数自定义 Spring 配置文件的位置和名称
    -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!-- classpath 表示类路径，如 resource 目录下 -->
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>


    <!-- 配置跨域过滤器 -->
    <filter>
        <filter-name>corsFilter</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>corsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- session 过期时间 -->
    <session-config>
        <!-- 30 min -->
        <session-timeout>30</session-timeout>
    </session-config>

</web-app>